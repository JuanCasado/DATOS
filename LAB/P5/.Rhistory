q()
(muestra = t(matrix(c(3,2,3,5,12,4.7,4.1,5.2,4.9,7.1,6.1,6.2,5.2,14,5.3)2,7,dimnames = list(c("r","d")))))
(muestra = t(matrix(c(3,2,3,5,12,4.7,4.1,5.2,4.9,7.1,6.1,6.2,5.2,14,5.3),2,7,dimnames = list(c("r","d")))))
(muestra = t(matrix(c(3,2,3.5,12,4.7,4.1,5.2,4.9,7.1,6.1,6.2,5.2,14,5.3),2,7,dimnames = list(c("r","d")))))
(muestra=data.frame(muestra))
(boxplot(muestra$r, range=15, plot=FALSE))
(cuar1<-quantile(muestra$r,0.25))
(cuar3<-quantile(muestra$r,0.75))
(int=c(cuar1-1.5*(cuar3-cuar1), cuar3+1.5*(cuar3-cuar1)))
(intdes=c(mean(muestra$d)-2*sd(muestra$d),mean(muestra$d)+2*sd(muestra$d)))
sdd=sqrt(var(muestra$d)*((length(muestra$d)-1/length(muestra$d))))
(dFr=lm(muestra$d~muestra$r))
(summary(dFr))
(res=summary(dFr)$residuals)
(sr=sqrt(sum*(res^2)/7))
(sr=sqrt(sum(res^2)/7))
setwd("C:/Users/SAMUEL/Desktop/GII-4/DATOS/LAB/P5")
datos1 <- read.table("datos1.txt")
datos1
muestra=t(datos1)
datos1
muestra
distancias=as.matrix(dist(muestra))
distancias
distancias=matrix(distancias,5,5)
clear
clc
clr
muestra=matrix(c(4,4,4,3,5,5,1,1,5,4),2,5)
muestra=t(muestra)
distancias=as.matrix(dist(muestra))
distancias=matrix(distancias,5,5)
for(i in 1:5){distancias[,i]=sort(distancias[,i])};(distanciasordenadas=distancias)
for(i in 1:5){if(distanciasordenadas[4,i]>2.5){print(i);print("es un suceso anomalo o outlier")}}
datos1 <- read.table("datos1.txt")
datos1
distancias=as.matrix(dist(datos1))
distancias
for(i in 1:5){distancias[,i]=sort(distancias[,i])};(distanciasordenadas=distancias)
(dFr=lm(muestra$d~muestra$r))
datos2 <- read.table("datos2.txt")
(dFr=lm(datos2$d~datos2$r))
(dFr=lm(datos2$Densidad~datos2$Resistencia))
(summary(dFr))
(res=summary(dFr)$residuals)
(sr=sqrt(sum(res^2)/7))
muestra.length()
muestra.length
datos2.length
datos2.length()
length(datos2)
datos 2
datos2
length(datos2$Resistencia)
for(i in 1:7){if(res[i]>2.5){print(i);print("es un suceso anomalo o outlier")}}
res[7]
res[2]
res[1]
res[2]
res[3]
res[4]
res[5]
res[6]
datos2 <- read.table("datos2.txt")
(dFr=lm(datos2$Densidad~datos2$Resistencia))
(res=summary(dFr)$residuals)
(sr=sqrt(sum(res^2)/7))
for(i in 1:7){if(abs(res[i])>2*sr){print(i);print("es un suceso anomalo o outlier")}}
plot(datos2)
circle(4,5)
circle(4,5,r=3)
plot(datos2);circle(4,5,r=3)
plot(datos2);draw.circle(0,0,1,nv=1000,border=NULL,col=NA,lty=1,lwd=1)
library("plotrix")
install.packages("plotrix")
plot(datos2);draw.circle(0,0,1,nv=1000,border=NULL,col=NA,lty=1,lwd=1)
plot(x, y)
symbols(x=c(5,18), y=c(6,23), circles=rep(1,2), add=T, inches=F)
plot(datos2)
symbols(x=c(5,18), y=c(6,23), circles=rep(1,2), add=T, inches=F)
datos1 <- read.table("datos1.txt")
datos1
plot(datos1);symbols(x=c(5,18), y=c(6,23), circles=rep(1,2), add=T, inches=F)
plot(datos1);symbols(x=c(4,4,5,1,5), y=c(4,3,5,1,4), circles=rep(1,2,3,4,5), add=T, inches=F)
plot(datos1);symbols(x=c(4,4,5,1,5), y=c(4,3,5,1,4), circles=rep(1,2,3,4,5), add=T, inches=F)
plot(datos1);symbols(x=c(4,4,5,1,5), y=c(4,3,5,1,4), circles=rep(1,2), add=T, inches=F)
plot(datos1);symbols(x=c(4,4), y=c(4,3), circles=rep(1,2), add=T, inches=F)
plot(datos1);symbols(datos1$Teoria,datos1$Laboratorio,circles=2)
plot(datos1);symbols(datos1$Teoria,datos1$Laboratorio,circles=5)
x <- c(2, 5, 7, 9, 12, 16, 18, 21)
y <- c(3, 6, 10, 13, 15, 19, 23, 25)
plot(x, y)
size=runif(length(x))
symbols(x,y,circles=size)
x <- c(2, 5, 7, 9, 12, 16, 18, 21)
y <- c(3, 6, 10, 13, 15, 19, 23, 25)
plot(datos1)
size=runif(length(x))
symbols(x,y,circles=size)
library("plotrix")
plot(datos2);draw.circle(0,0,1,nv=1000,border=NULL,col=NA,lty=1,lwd=1)
plot(datos2);circle(4,5,r=3)
plot(datos2);draw.circle(4,5,r=3)
plot(datos1);draw.circle(4,5,r=3)
data3<-read.csv("ozone.csv")
data3
plot(data3$Temperature_ElMonte, data3$Temperature_Sandburg)
plot(data3$Humidity, data3$Wind_speed)
plot(data3$Humidity, data3$Temperature_ElMonte)
plot(data3$Humidity, data3$Temperature_Sandburg)
plot(data3$Month, data3$Humidity)
plot(data3$Month, data3$Temperature_Sandburg)
boxplot(ozone_reading ~ Month, data=ozoneData, main="Ozone reading across months")
boxplot(data3 ~ Month, data=ozoneData, main="Ozone reading across months")
boxplot(data3 ~ Month, data=data3, main="Ozone reading across months")
plot(data3$ozone_reading)
plot(data3$ozone_reading,data3$Month)
plot(data3$Month, data3$ozone_reading)
plot(data3$Month, data3$ozone_reading)
plot(data3$Month)
plot(data3$Day_of_month)
plot(data3$ozone_reading)
plot(data3$Visibility,data3$Humidity)
plot(data3,data3)
plot(data3$Temperature_ElMonte, data3$Month)
plot(data3$Month, data3$Temperature_ElMonte)
plot(data3$Pressure_gradient, data3$Temperature_ElMonte)
plot(data3$Pressure_gradient, data3$Temperature_Sandburg)
plot(data3$pressure_height, data3$Temperature_Sandburg)
plot(data3$Humidity, data3$Visibility)
plot(data3$Visibility, data3$Humidity)
dFr=lm(data3$Visibility~data3$Humidity)
source("entrega.rnw")
plot(data3$Visibility, data3$Humidity, xlab='Visibility', ylab='humidity')
abline(regresion)
plot(data3$Visibility, data3$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
plot(data3$Visibility, data3$Humidity, xlab='Visibility', ylab='humidity')
abline(regresion)
newvec=(data3$Visibility,data3$Humidity)
data3[,c("Visibility","Humidity")]
prueba = data3[,c("Visibility","Humidity")]
prueba
plot(prueba)
dFr=lm(prueba$Visibility~prueba$Humidity)
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(regresion)
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
distancias <- as.matrix(dist(prueba))
distancias
for(i in 1:length(distanciasordenadas[,1])){
distancias[,i] <- sort(distancias[,i])
}
distanciasordenadas <- distancias
for(i in 1:length(distancias[,1])){
distancias[,i] <- sort(distancias[,i])
}
distanciasordenadas <- distancias
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>2.5){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- datos1[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>2.5){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>20){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>18){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>5){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
pA<-prueba[-1,]
pA<-prueba[-2,]
pA<-prueba[-3,]
prueba = data3[,c("Visibility","Humidity")]
pA=prueba
pA[-1,]
pA[-3,];
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}else{outli}
}
outliers_kvecinos
plot(outliers_kvecinos)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}else{outliers}
}
outliers_kvecinos
pa = matrix()
pa
pa<-prueba
pa
length(prueba)
length(prueba$Visibility)
prueba[1,1]=outliers_kvecinos[1]
prueba[1,1]==outliers_kvecinos[1]
prueba[1,1]
prueba[1,1]
prueba[1]
outliers_kvecinos
outliers_kvecinos[1]
outliers_kvecinos[1,1]
outliers_kvecinos[1]
outliers_kvecinos$Visibility
outliers_kvecinos[,2]
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>2.5){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos
outliers_kvecinos[1]
outliers_kvecinos[[1]]
outliers_kvecinos[[1,2]]
outliers_kvecinos[[1]]$Visibility
prueba[1,1]==outliers_kvecinos[[1]]
prueba[1,1]
prueba[[1]]
prueba
prueba[1]
prueba[1,1]
prueba[1,]
prueba[1,]==outliers_kvecinos[[1]]
prueba[1,]
outliers_kvecinos[[1]]$Visibility
outliers_kvecinos[[1]]
outliers_kvecinos[[0]]
outliers_kvecinos[[1]]
outliers_kvecinos[[1]]$Visibility
outliers_kvecinos[[1]]$Visibility==prueba[1,]$Visibility
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}else{outliers}
}
outliers_kvecinos
outliers_kvecinos[1]
outliers_kvecinos[2]
outliers_kvecinos[1]
outliers_kvecinos[[1]]
outliers_kvecinos[[2]]
outliers_kvecinos[[1]]
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
outliers_kvecinos[[2]]
prueba
outliers_kvecinos
prueba<-prueba[-1,]
prueba
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
prueba = data3[,c("Visibility","Humidity")]
dFr=lm(prueba$Visibility~prueba$Humidity)
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
prueba<- prueba[-3:-17,]
prueba
prueba = data3[,c("Visibility","Humidity")]
outliers_kvecinos
prueba = prueba[-c(3,17,23,26,34,44,50,52,61,64,124,176,190,194),]
prueba
dFr=lm(prueba$Visibility~prueba$Humidity)
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
prueba = data3[,c("Visibility","Humidity")]
dFr=lm(prueba$Visibility~prueba$Humidity)
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
prueba2 = prueba[-c(3,17,23,26,34,44,50,52,61,64,124,176,190,194),]
dFr2=lm(prueba2$Visibility~prueba2$Humidity)
plot(prueba2$Visibility, prueba2$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr2)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[4,i]>10){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
prueba2 = prueba[-c(1,3,6,7,17,23,24,26,34,39,44,45,50,52,61,64,72,74,83,87,93,109,124,146,153,155,157,159,160,168,173,175,176,177,179,188,189,190,194,201,202),]
plot(prueba2$Visibility, prueba2$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr2)
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
plot(prueba2$Visibility, prueba2$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr2)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[7,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
plot(prueba$Visibility, prueba$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr)
plot(prueba2$Visibility, prueba2$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr2)
prueba2 = prueba[-c(1,3,6,7,17,23,24,26,34,39,44,45,50,52,61,64,72,74,83,87,93,109,124,146,153,155,157,159,160,168,173,175,176,177,179,188,189,190,194,201,202),]
plot(prueba2$Visibility, prueba2$Humidity, xlab='Visibility', ylab='humidity')
abline(dFr2)
outliers_kvecinos = list()
for(i in 1:length(distanciasordenadas[,1])){
if(distanciasordenadas[15,i]>15){
outliers_kvecinos[[length(outliers_kvecinos)+1]] <- prueba[i,]
}
}
outliers_kvecinos
